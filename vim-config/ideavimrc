let mapleader = " "

"========== General ==========
set expandtab                   " Use soft tabs
set tabstop=2                   " Tab settings
set autoindent
set smarttab                    " Use shiftwidth to tab at line beginning
set shiftwidth=2                " Width of autoindent
set backspace=indent,eol,start  " Let backspace work over anything.
set showmatch                   " Show matching brackets/braces
set mouse=a                     " enable mouse in all modes
set ignorecase smartcase
set incsearch
set clipboard^=unnamed,ideaput
set idearefactormode=keep
set ideajoin=true
set ideamarks=true
set scrolloff=5

" Spell checking
set spelllang=en_us
nmap <silent> <leader>sp :set spell!<cr>
map <leader>z :'<,'>sort<cr>

" UTF-8 all the way
set encoding=utf-8

"========== Folding ==========
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use


"========== Keybindings ==========
imap jj          <Esc>
cmap w!!         w !sudo tee > /dev/null %

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

nnoremap <leader>\ :action SelectInProjectView<cr>

" File/symbol navigation
" mimic <C-p> in vim
nnoremap <silent> <C-p> :action GotoFile<cr>
inoremap <silent> <C-p> <esc> :action GotoFile<cr>i
" mimic <C-S-p> in vim to open symbols
nnoremap <silent> <C-S-p> :action GotoSymbol<cr>
inoremap <silent> <C-S-p> <esc> :action GotoSymbol<cr>i
" Open actions menu
nnoremap <silent> <C-S-a> :action GotoAction<cr>
inoremap <silent> <C-S-a> <esc> :action GotoAction<cr>i

" Code navigation
" go to current file in file tree
nmap <leader>gf :action SelectIn<cr>
" go to test file for source (and vice-versa)
nmap <leader>gt  :action GotoTest<cr>
" implementations
nmap <leader>] :action GotoImplementation<cr>
" super
nmap <leader>[ :action GotoSuperMethod<cr>
nnoremap <space>k :action HighlightUsagesInFile<cr>

" built-in navigation to navigated items works better
nnoremap <c-o> :action Back<cr>
nnoremap <c-i> :action Forward<cr>
" but preserve ideavim defaults
nnoremap g<c-o> <c-o>
nnoremap g<c-i> <c-i>

" built in search looks better
nnoremap / :action Find<cr>
" but preserve ideavim search
nnoremap g/ /

nmap <leader>sr :action Replace<cr>
nmap <leader>sR :action ReplaceInPath<cr>


" file structure
nmap <leader>fs  :action FileStructurePopup<cr>

" Show me...
" usages
nmap <leader>su :action FindUsages<cr>
" help
nmap <leader>sh :action QuickJavaDoc<cr>
nmap <leader>sH :action QuickImplementations<cr>
" error description
nmap <leader>se  :action ShowErrorDescription<cr>

" quick docs, is this still needed?
nmap <leader>/ :action QuickJavaDoc<cr>
nmap <leader>? :action QuickImplementations<cr>

" show parameter info
nnoremap <silent> <A-p> :action ParameterInfo<cr>
inoremap <silent> <A-p> <esc> :action ParameterInfo<cr>i

" git blame
nmap <leader>gb  :action Annotate<cr>
" git history
nmap <leader>gh  :action Vcs.ShowTabbedFileHistory<cr>
" git open in browser
nmap <leader>go  :action Github.Open.In.Browser<cr>
" git commit
nmap <leader>gk  :action CheckinProject<cr>

" Content navigation
" tab/buffer navigation
nmap <leader>b   :action RecentFiles<cr>
nnoremap \e :action Switcher<cr>
" move pane to left
nnoremap <silent> <A-Left> :action MoveEditorToOppositeTabGroup<cr>
nnoremap <silent> <A-H> :action MoveEditorToOppositeTabGroup<cr>
" move pane to right
nnoremap <silent> <A-Right> :action MoveEditorToOppositeTabGroup<cr>
nnoremap <silent> <A-L> :action MoveEditorToOppositeTabGroup<cr>

" Run...
" run last
nnoremap <leader>rl  :action Run<cr>
" run this
nnoremap <leader>rt  :action RunClass<cr>
" run all
nnoremap <leader>ra  :action EditorMoveToPageTop<cr>:action RunClass<cr>
" run failed
nnoremap <leader>rf  :action RerunFailedTests<cr>
" debug last
nnoremap <leader>dl  :action Debug<cr>
" debug this
nnoremap <leader>dt  :action DebugClass<cr>

" ### Refactoring ###
noremap <leader><cr>  :action ShowIntentionActions<cr>
" refactor This
noremap <leader>t  :action Refactorings.QuickListPopupAction<cr>
noremap <leader>v  :action IntroduceVariable<cr>
noremap <leader>in  :action Inline<cr>
noremap <leader>em  :action ExtractMethod<cr>
noremap <leader>re  :action RenameElement<cr>
nnoremap <leader>om  :action OverrideMethods<cr>

" ### Code Generation / Templates
" generate
nnoremap <leader>ge  :action Generate<cr>

" Multiple cursors
" built in select next behavior is better, so map to <C-n> and friends for
" vim-visual-multi equivalents. Below only mimics <C-up> and <C-down> behavior
noremap <silent> <C-up>    :action EditorCloneCaretAbove<cr>
inoremap <silent> <C-up>    <esc>:action EditorCloneCaretAbove<cr>i

noremap <silent> <C-down>  :action EditorCloneCaretBelow<cr>
inoremap <silent> <C-down>  <esc>:action EditorCloneCaretBelow<cr>i

" Expand/Shrink selection
noremap <silent> <C-k> :action EditorSelectWord<cr>
inoremap <silent> <C-k> :action EditorSelectWord<cr>i
noremap <silent> <C-j> :action EditorUnSelectWord<cr>
inoremap <silent> <C-j> <esc> :action EditorUnSelectWord<cr>i

" actions
nnoremap \q :action CloseContent<cr>
nnoremap \Q :action ReopenClosedTab<cr>
nnoremap \w :action CloseAllEditorsButActive<cr>
nnoremap \W :action CloseAllEditors<cr>
nnoremap \b :action ToggleLineBreakpoint<cr>
nnoremap \B :action EditBreakpoint<cr>
map <leader>=    :action ReformatCode<cr>

" unimpaired mappings
nnoremap [<space> O<esc>j
nnoremap ]<space> o<esc>k
nnoremap [m :action MethodUp<cr>
nnoremap ]m :action MethodDown<cr>
nnoremap [c :action VcsShowPrevChangeMarker<cr>
nnoremap ]c :action VcsShowNextChangeMarker<cr>
" errors
nnoremap [e  :action GotoPreviousError<cr>
nnoremap ]e  :action GotoNextError<cr>

" motion
map <leader>w <Plug>(easymotion-bd-w)

" paste the 0 buffer
nnoremap <leader>p "0p
nnoremap <leader>P "0P

"======== IdeaVim Emulated Plugins =======
set surround
set commentary
set easymotion
set exchange
set highlightedyank
set textobj-entire
set NERDTree
set showmode

