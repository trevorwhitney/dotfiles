let mapleader = " "

"======== IdeaVim Emulated Plugins =======
set surround
set commentary
set easymotion
set exchange
set highlightedyank
set textobj-entire
set NERDTree

"========== General ==========
set expandtab                   " Use soft tabs
set tabstop=2                   " Tab settings
set autoindent
set smarttab                    " Use shiftwidth to tab at line beginning
set shiftwidth=2                " Width of autoindent
set backspace=indent,eol,start  " Let backspace work over anything.
set showmatch                   " Show matching brackets/braces
set mouse=a                     " enable mouse in all modes
set incsearch
set clipboard+=unnamed,ideaput
set idearefactormode=visual
set ideajoin=true
set ideamarks=true
set scrolloff=5

" Spell checking
set spelllang=en_us
nmap <silent> <leader>sp :set spell!<CR>
map <Leader>z :'<,'>sort<CR>

" UTF-8 all the way
set encoding=utf-8

"========== Folding ==========
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use


"========== Keybindings ==========
imap jj          <Esc>
cmap w!!         w !sudo tee > /dev/null %

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" nerd tree equivalence
map \ <Action>(ActivateProjectToolWindow)
map \| <Action>(SelectInProjectView)

" File/symbol navigation
" mimic <C-p> in vim
nnoremap <silent> <C-p> <Action>(GotoFile)
" if this starts acting weird, investigate what gi originally used to do and maybe use that?
inoremap <silent> <C-p> <esc> <Action>(GotoFile)i
" mimic <C-S-p> in vim to open symbols
nnoremap <silent> <C-S-p> <Action>(GotoSymbol)
" if this starts acting weird, investigate what gi originally used to do and maybe use that?
inoremap <silent> <C-S-p> <esc> <Action>(GotoSymbol)i

" Open actions menu
nnoremap <silent> <C-S-a> <Action>(GotoAction)
" if this starts acting weird, investigate what gi originally used to do and maybe use that?
inoremap <silent> <C-S-a> <esc> <Action>(GotoAction)i

" format code
map <Leader>l    <Action>(ReformatCode)

" go to next error
nmap <Leader>e  <Action>(GotoNextError)

" Go to...
" go to current file in file tree
nmap <Leader>gf <Action>(SelectIn)
" go to test file for source (and vice-versa)
nmap <Leader>gt  <Action>(GotoTest)

" file structure
nmap <Leader>fs  <Action>(FileStructurePopup)

" Show me...
" usages
nmap <Leader>su <Action>(FindUsages)
" implementations
nmap <Leader>sm <Action>(GotoImplementation)
" super/interfaces
nmap <Leader>ss <Action>(GotoSuperMethod)
nmap <Leader>si <Action>(GotoSuperMethod)
" help
nmap <Leader>sh <Action>(QuickJavaDoc)
nmap <Leader>sH <Action>(QuickImplementations)
" error
nmap <Leader>se  <Action>(ShowErrorDescription)

" quick docs, is this still needed?
nmap <Leader>/ <Action>(QuickJavaDoc)
nmap <Leader>? <Action>(QuickImplementations)

" show parameter info
nnoremap <silent> <A-p> <Action>(ParameterInfo)
" if this starts acting weird, investigate what gi originally used to do and maybe use that?
inoremap <silent> <A-p> <esc> <Action>(ParameterInfo)i

" git blame
nmap <Leader>gb  <Action>(Annotate)
" git history
nmap <Leader>gh  <Action>(Vcs.ShowTabbedFileHistory)
" git open in browser
nmap <Leader>go  <Action>(Github.Open.In.Browser)
" git commit
nmap <Leader>gk  <Action>(CheckinProject)

" tab/buffer navigation
nmap <Leader>b   <Action>(RecentFiles)
" move pane to left
nnoremap <silent> <A-Left> <Action>(MoveEditorToOppositeTabGroup)
" move pane to right
nnoremap <silent> <A-Right> <Action>(MoveEditorToOppositeTabGroup)

" Run...
" run last
nmap <Leader>rl  <Action>(Run)
" run this
nmap <Leader>rt  <Action>(RunClass)
" run all
nmap <Leader>ra  <Action>(EditorMoveToPageTop) <Action>(RunClass)
" run failed
nmap <Leader>rf  <Action>(RerunFailedTests)
" debug last
nmap <Leader>dl  <Action>(Debug)
" debug this
nmap <Leader>dt  <Action>(DebugClass)

" ### Refactoring ###
" show intentions
map <Leader>i  <Action>(ShowIntentionActions)
" refactor this
map <Leader>tt  <Action>(Refactorings.QuickListPopupAction)
" introduce variable
map <Leader>tv  <Action>(IntroduceVariable)
" inline
map <Leader>ti  <Action>(Inline)
" extract method
map <Leader>tm  <Action>(ExtractMethod)
" override method
map <Leader>to  <Action>(OverrideMethods)
" rename
map <Leader>tr  <Action>(RenameElement)

" ### Code Generation / Templates
" generate
map <Leader>ge  <Action>(Generate)

" vim-visual-multi equivalents
nnoremap <silent> <C-n> <Action>(SelectNextOccurrence)
vnoremap <silent> <C-n> <Action>(SelectNextOccurrence)
inoremap <silent> <C-n> <esc> <Action>(SelectNextOccurrence)i

nnoremap <silent> <C-S-n> <Action>(UnselectPreviousOccurrence)
vnoremap <silent> <C-S-n> <Action>(UnselectPreviousOccurrence)
inoremap <silent> <C-S-n> <esc> <Action>(UnselectPreviousOccurrence)i

nnoremap <silent> <C-A-S-n> <Action>(SelectAllOccurrences)
vnoremap <silent> <C-A-S-n> <Action>(SelectAllOccurrences)
inoremap <silent> <C-A-S-n> <esc> <Action>(SelectAllOccurrences)i

nnoremap <silent> <C-up>    <Action>(EditorCloneCaretAbove)
vnoremap <silent> <C-up>    <Action>(EditorCloneCaretAbove)
inoremap <silent> <C-up>    <esc><Action>(EditorCloneCaretAbove)i
nnoremap <silent> <C-down>  <Action>(EditorCloneCaretBelow)
vnoremap <silent> <C-down>  <Action>(EditorCloneCaretBelow)
inoremap <silent> <C-down>  <esc><Action>(EditorCloneCaretBelow)i

nnoremap <silent> <C-k> <Action>(EditorSelectWord)
vnoremap <silent> <C-k> <Action>(EditorSelectWord)
inoremap <silent> <C-k> <esc> <Action>(EditorSelectWord)i

nnoremap <silent> <C-j> <Action>(EditorUnSelectWord)
vnoremap <silent> <C-j> <Action>(EditorUnSelectWord)
inoremap <silent> <C-j> <esc> <Action>(EditorUnSelectWord)i

" paste the 0 buffer
nnoremap <leader>p "0p
nnoremap <leader>P "0P

" old stuff I don't really use
nmap <Leader>sr :%s/\<<C-r><C-w>\>/

