let mapleader = " "

"========== General ==========
set expandtab                   " Use soft tabs
set tabstop=2                   " Tab settings
set autoindent
set smarttab                    " Use shiftwidth to tab at line beginning
set shiftwidth=2                " Width of autoindent
set backspace=indent,eol,start  " Let backspace work over anything.
set showmatch                   " Show matching brackets/braces
set mouse=a                     " enable mouse in all modes
set incsearch
set clipboard+=unnamed

" Spell checking
set spelllang=en_us
nmap <silent> <leader>sp :set spell!<CR>
map <Leader>z :'<,'>sort<CR>

" UTF-8 all the way
set encoding=utf-8

"========== Folding ==========
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use


"========== Keybindings ==========
imap jj          <Esc>
cmap w!!         w !sudo tee > /dev/null %

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" nerd tree equivalence
map \ :action ActivateProjectToolWindow<CR>
map \| :action SelectInProjectView<CR>

" File/symbol navigation
" mimic <C-p> in vim
nnoremap <silent> <C-p> :action GotoFile<CR>
" if this starts acting weird, investigate what gi originally used to do and maybe use that?
inoremap <silent> <C-p> <esc> :action GotoFile<CR>i
" mimic <C-S-p> in vim to open symbols
nnoremap <silent> <C-S-p> :action GotoSymbol<CR>
" if this starts acting weird, investigate what gi originally used to do and maybe use that?
inoremap <silent> <C-S-p> <esc> :action GotoSymbol<CR>i

" Open actions menu
nnoremap <silent> <C-S-a> :action GotoAction<CR>
" if this starts acting weird, investigate what gi originally used to do and maybe use that?
inoremap <silent> <C-S-a> <esc> :action GotoAction<CR>i

" format code
map <Leader>l    :action ReformatCode<CR>

" go to next error
nmap <Leader>e  :action GotoNextError<CR>

" Go to...
" go to current file in file tree
nmap <Leader>gf :action SelectIn<CR>
" go to test file for source (and vice-versa)
nmap <Leader>gt  :action GotoTest<CR>

" file structure
nmap <Leader>fs  :action FileStructurePopup<CR>

" Show me...
" usages
nmap <Leader>su :action FindUsages<CR>
" implementations
nmap <Leader>sm :action GotoImplementation<CR>
" super/interfaces
nmap <Leader>ss :action GotoSuperMethod<CR>
nmap <Leader>si :action GotoSuperMethod<CR>
" help
nmap <Leader>sh :action QuickJavaDoc<CR>
nmap <Leader>sH :action QuickImplementations<CR>
" error
nmap <Leader>se  :action ShowErrorDescription<CR>

" quick docs, is this still needed?
nmap <Leader>/ :action QuickJavaDoc<CR>
nmap <Leader>? :action QuickImplementations<CR>

" show parameter info
nnoremap <silent> <A-p> :action ParameterInfo<CR>
" if this starts acting weird, investigate what gi originally used to do and maybe use that?
inoremap <silent> <A-p> <esc> :action ParameterInfo<CR>i

" git blame
nmap <Leader>gb  :action Annotate<CR>
" git history
nmap <Leader>gh  :action Vcs.ShowTabbedFileHistory<CR>
" git open in browser
nmap <Leader>go  :action Github.Open.In.Browser<CR>
" git commit
nmap <Leader>gk  :action CheckinProject

" tab/buffer navigation
nmap <Leader>b   :action RecentFiles<CR>
" move pane to left
nnoremap <silent> <A-Left> :action MoveEditorToOppositeTabGroup<CR>
" move pane to right
nnoremap <silent> <A-Right> :action MoveEditorToOppositeTabGroup<CR>

" Run...
" run last
nmap <Leader>rl  :action Run<CR>
" run this
nmap <Leader>rt  :action RunClass<CR>
" run all
nmap <Leader>ra  :action EditorMoveToPageTop<CR> :action RunClass<CR>
" run failed
nmap <Leader>rf  :action RerunFailedTests<CR>
" debug last
nmap <Leader>dl  :action Debug<CR>
" debug this
nmap <Leader>dt  :action DebugClass<CR>

" ### Refactoring ###
" show intentions
map <Leader>i  :action ShowIntentionActions<CR>
" refactor this
map <Leader>tt  :action Refactorings.QuickListPopupAction<CR>
" introduce variable
map <Leader>tv  :action IntroduceVariable<CR>
" inline
map <Leader>ti  :action Inline<CR>
" extract method
map <Leader>tm  :action ExtractMethod<CR>
" override method
map <Leader>to  :action OverrideMethods<CR>
" rename
map <Leader>tr  :action RenameElement<CR>

" ### Code Generation / Templates
" generate
map <Leader>ge  :action Generate<CR>


" vim-visual-multi equivalents
nnoremap <silent> <C-n> :action SelectNextOccurrence<CR>
vnoremap <silent> <C-n> :action SelectNextOccurrence<CR>
inoremap <silent> <C-n> <esc> :action SelectNextOccurrence<CR>i

nnoremap <silent> <C-S-n> :action UnselectPreviousOccurrence<CR>
vnoremap <silent> <C-S-n> :action UnselectPreviousOccurrence<CR>
inoremap <silent> <C-S-n> <esc> :action UnselectPreviousOccurrence<CR>i

nnoremap <silent> <C-A-S-n> :action SelectAllOccurrences<CR>
vnoremap <silent> <C-A-S-n> :action SelectAllOccurrences<CR>
inoremap <silent> <C-A-S-n> <esc> :action SelectAllOccurrences<CR>i

nnoremap <silent> <C-up>    :action EditorCloneCaretAbove<CR>
vnoremap <silent> <C-up>    :action EditorCloneCaretAbove<CR>
inoremap <silent> <C-up>    <esc>:action EditorCloneCaretAbove<CR>i
nnoremap <silent> <C-down>  :action EditorCloneCaretBelow<CR>
vnoremap <silent> <C-down>  :action EditorCloneCaretBelow<CR>
inoremap <silent> <C-down>  <esc>:action EditorCloneCaretBelow<CR>i

nnoremap <silent> <C-k> :action EditorSelectWord<CR>
vnoremap <silent> <C-k> :action EditorSelectWord<CR>
inoremap <silent> <C-k> <esc> :action EditorSelectWord<CR>i

nnoremap <silent> <C-j> :action EditorUnSelectWord<CR>
vnoremap <silent> <C-j> :action EditorUnSelectWord<CR>
inoremap <silent> <C-j> <esc> :action EditorUnSelectWord<CR>i

" paste the 0 buffer
nnoremap <leader>p "0p
nnoremap <leader>P "0P

" old stuff I don't really use
nmap <Leader>sr :%s/\<<C-r><C-w>\>/

"======== IdeaVim Emulated Plugins =======
set surround
set commentary
set easymotion
set exchange
set highlightedyank
set textobj-entire
