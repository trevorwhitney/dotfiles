autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

bindkey -M viins 'jj' vi-cmd-mode

# readline compatability
bindkey -M viins '^P'  up-history
bindkey -M viins '^N'  down-history
bindkey -M viins '^?'  backward-delete-char
bindkey -M viins '^[d' kill-word
bindkey -M viins '^w'  backward-kill-word
bindkey -M viins '^u'  backward-kill-line
bindkey -M viins '^f'  forward-char
bindkey -M viins '^b'  backward-char
bindkey -M viins '^[f' forward-word
bindkey -M viins '^[b' backward-word

# needed for vi-mode indication in theme
function zle-line-init zle-keymap-select {
  zle reset-prompt
}

zle -N zle-line-init
zle -N zle-keymap-select

export KEYTIMEOUT=17

if [[ -e "$HOME/.cargo/env" ]]; then
  source "$HOME/.cargo/env"
fi

if [[ $(command -v luarocks) ]]; then
  eval "$(luarocks path --bin)"
fi

# Return the lowest numbered display in use by current user
# which is usually what we want
function get_default_display() {
  ps -u $(id -u) -o pid= \
    | xargs -I PID -r cat /proc/PID/environ 2> /dev/null \
    | tr '\0' '\n' \
    | grep -m1 -P '^DISPLAY=' \
    | sed -e 's/DISPLAY=//g'
}

# Needed for some copy/paste oddity with X11 forwarding
# TODO: this doesn't work if there are multiple X servers, ie
# sometimes you get 0 and 1, how do you pick between them?
# if [[ `command -v tmux` ]] && [[ `tmux ls 2> /dev/null` ]]; then
#   export TMUX_DISPLAY="$(tmux show-env | sed -n 's/^DISPLAY=//p')"
#   # tmux clobbers our default DISPLAY env var, which reaks havoc
#   # on copy/paste behavior in vim and terminal, so reset it when
#   # tmux is active
#   export DISPLAY="$(get_default_display)"
# fi

if [[ "$BACKGROUND" == "dark" ]]; then
  export BAT_THEME="Solarized (dark)"
  export FZF_PREVIEW_PREVIEW_BAT_THEME="Solarized (dark)"
  export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#586e75,bg=#002b36"
else
  export BAT_THEME="Solarized (light)"
  export FZF_PREVIEW_PREVIEW_BAT_THEME="Solarized (light)"
  export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#93a1a1,bg=#fdf6e3"
fi

autoload -Uz compinit
compinit -i

if [[ `command -v kubectl` ]]; then
  source <(kubectl completion zsh)
  complete -F __start_kubectl k
fi


# this path isn't there on nixos systems
if [[ -e "$HOME/.nix-profile" ]]; then
  export NIX_PROFILE="$HOME/.nix-profile"
  . $NIX_PROFILE/etc/profile.d/hm-session-vars.sh
fi

PATH="${HOME}/.local/bin:$PATH"
export NIX_STORE_DIR=/nix/store
export NIX_STATE_DIR=/nix/var/nix
export NIX_LOG_DIR=/nix/var/log/nix

export EDITOR="vim"

# completions
complete -o nospace -C "$NIX_PROFILE/bin/gocomplete" go
complete -o nospace -C /usr/bin/nomad nomad
complete -o nospace -C /usr/local/bin/k3dsonnet k3dsonnet

autoload -U +X bashcompinit && bashcompinit
