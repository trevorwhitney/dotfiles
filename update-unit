#!/usr/bin/env zsh

set -e # Exit if any command fails

function msg {
  local blue="\e[0;34m"
  local reset="\e[m\n"
  printf "$blue$1$reset\n"
}

unit_name=$1
unit_dir="units/$unit_name"
test -d _units/$unit_name && unit_dir=_units/$unit_name

kernel_file="$unit_dir/kernel"
deps_file="$unit_dir/deps"
update_script="$unit_dir/update.sh"

test -d "$unit_dir" || {
  msg "-* $unit_name not found"
  exit 1
}

# Skip if this unit is incompatible with current kernel
if [[ -f $kernel_file ]] && [[ -n "$(cat "${kernel_file}")" ]] && [[ ! $(uname) =~ $(cat "$kernel_file") ]]; then
  echo "Skipping $unit_name, not compatible with current kernel $(uname)"
  exit
fi

# Skip if this unit or any deps are excluded
excluded=$(cat $HOME/.config/dotfiles/host.json | jq -r '.excluded | join(" ")')
echo $excluded | grep $unit_name > /dev/null && {
    msg "-* skipping excluded $unit_name"
    exit
  }
test -f "$deps_file" && {
  for dep_name in `<$deps_file` ; do
    (echo $excluded | grep -x -q $dep_name -) && {
      msg "-* skipping $unit_name due to excluded dep $dep_name"
      exit
    }
  done
}

# Update the unit if it has an update script
test -f "$update_script" && {
  msg "-* updating $unit_name"
  zsh "$update_script"
}
